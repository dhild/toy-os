OUTPUT_FORMAT(elf64-x86-64)
ENTRY(loader)
PHYS_BASE = 0x100000;
VIRTUAL_BASE = 0xC00000000000;
SECTIONS
{
	. = PHYS_BASE;

        kernel_begin_addr = .;

	.header :
	{
		*multiboot.o(.text*)
		*paging.o(.text*)
		. = ALIGN(4096);
	}

	. += VIRTUAL_BASE;

	.text : AT(ADDR(.text) - VIRTUAL_BASE)
	{
		*(.text*)
		*(.gnu.linkonce.t*)
		. = ALIGN(4096);
	}

	.rodata : AT(ADDR(.rodata) - VIRTUAL_BASE)
	{
		start_ctors = .;
		*(SORT(.ctor*))
		end_ctors = .;

		start_dtors = .;
		*(SORT(.dtor*))
		end_dtors = .;

		*(.rodata*)
		*(.gnu.linkonce.r*)

		. = ALIGN(4096);
	}

	.data : AT(ADDR(.data) - VIRTUAL_BASE)
	{
		*(.data*)
		*(.gnu.linkonce.d*)

		. = ALIGN(4096);
	}

        end_of_data = . - VIRTUAL_BASE;

	.bss :  AT(ADDR(.bss) - VIRTUAL_BASE)
	{
		*(COMMON*)
		*(.bss*)
		*(.gnu.linkonce.b*)
	}

	 /DISCARD/ :
	 {
		*(.comment)
		*(.eh_frame) /* You should discard this unless you're implementing runtime support for C++ exceptions. */
	 }

         end_of_kernel = . - VIRTUAL_BASE;
}
OUTPUT_FORMAT(elf64-x86-64)
ENTRY(loader)
VIRTUAL_BASE = 0xC00000000000;
SECTIONS
{
	. = 0x100000;

        kernel_begin_addr = .;

	.header :
	{
		*multiboot.o(.text*)
		*paging.o(.text*)
	}

	. += VIRTUAL_BASE;

	.text ALIGN(4096) : AT(ADDR(.text) - VIRTUAL_BASE)
	{
		*(.text*)
		*(.gnu.linkonce.t*)
	}

	.rodata ALIGN(4096) : AT(ADDR(.rodata) - VIRTUAL_BASE)
	{
		*(.rodata*)
		*(.gnu.linkonce.r*)
	}

	.data ALIGN(4096) : AT(ADDR(.data) - VIRTUAL_BASE)
	{
		start_ctors = .;
		*(.ctor*)
		end_ctors = .;

		start_dtors = .;
		*(.dtor*)
		end_dtors = .;

		*(.data*)
		*(.gnu.linkonce.d*)
	}

        end_of_data = . - 0xC00000000000;

	.bss ALIGN(4096) :  AT(ADDR(.bss) - VIRTUAL_BASE)
	{
		*(.COMMON*)
		*(.bss*)
		*(.gnu.linkonce.b*)
	}

	 /DISCARD/ :
	 {
		*(.comment)
		*(.eh_frame) /* You should discard this unless you're implementing runtime support for C++ exceptions. */
	 }

         end_of_kernel = . - 0xC00000000000;
}